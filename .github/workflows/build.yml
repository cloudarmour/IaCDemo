      

      #on: [push]
      on:
        push:
          paths:
          - 'tf-manifests/Infrastructure/*'
          - '.github/workflows/build.yml'

      name: Terraform Infrastructure deployment
      defaults: #decides where the code gets checked out   
        run:
          working-directory: tf-manifests/Infrastructure


      jobs:

          #terraform:
          build-and-deploy-infrastructure-piece:
            runs-on: ubuntu-latest
            
            #Works with CI/CD pipeline
            env:
                  ARM_CLIENT_ID: ${{secrets.TF_CLIENT_ID}}
                  ARM_CLIENT_SECRET: ${{secrets.TF_ARM_CLIENT_SECRET}}
                  ARM_SUBSCRIPTION_ID: ${{secrets.TF_SUBSCRIPTION_ID}}
                  ARM_TENANT_ID: ${{secrets.TF_TENANT_ID}}

            steps:
            - name: Check out source code
              uses: actions/checkout@v2

            
            - name: print path
              run: echo 'root directory --> ${{ github.workspace }}'


            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v1
              #with:
                #terraform_wrapper: false

            - name: Terraform Init
              #run: terraform  -chdir=tf-manifests init
              run: terraform  init


            - name: Terraform Apply
              #run: terraform -chdir=tf-manifests apply  -auto-approve
              run: terraform  apply -auto-approve

            
            - id: retrieve_rg_name
              run: |
                 rgname=$(terraform output resource_group_name)
                 echo "::set-output name=rg::$rgname"

            - id: retrieve_func_name
              run: |
                 funcname=$(terraform output function_app_name)
                 echo "::set-output name=func::$funcname"

            - id: retrieve_func_url
              run: |
                 funcurl=$(terraform output func_app_url)
                 echo "::set-output name=func_url::$funcurl"

            - name: update main.js file
              shell: pwsh
              working-directory: code/frontend
              run: |
                 #ls
                 $file="main.js"
                 #echo $file
                 $find="const localApi = 'http://localhost:7071/api/GetResumeCounter';"
                 $replace = "const functionApi = '${{ steps.retrieve_func_url.outputs.func_url }}';"
                 #echo $replace
                 (Get-Content $file).replace($find, $replace) | Set-Content $file
                 $snippet=(Select-String -Path "main.js" -Pattern "getresumecounterfunc4eb04f7")
                 echo "::set-output name=snip::$snippet"


            outputs:
              output1: ${{ steps.retrieve_rg_name.outputs.rg }}
              output2: ${{ steps.retrieve_func_name.outputs.func }}
              output3: ${{ steps.retrieve_func_url.outputs.func_url }}

            
                 




